//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HMS.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbHostiptalERPEntities : DbContext
    {
        public dbHostiptalERPEntities()
            : base("name=dbHostiptalERPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<ScreenDefinition> ScreenDefinitions { get; set; }
        public virtual DbSet<ScreenRight> ScreenRights { get; set; }
        public virtual DbSet<tbl_InventoryTransaction> tbl_InventoryTransaction { get; set; }
        public virtual DbSet<tbl_Item_Allocation> tbl_Item_Allocation { get; set; }
        public virtual DbSet<tbl_Item_Def> tbl_Item_Def { get; set; }
        public virtual DbSet<tbl_PurchaseDetail> tbl_PurchaseDetail { get; set; }
        public virtual DbSet<tbl_PurchaseMaster> tbl_PurchaseMaster { get; set; }
        public virtual DbSet<tbl_PurchaseReturnDetail> tbl_PurchaseReturnDetail { get; set; }
        public virtual DbSet<tbl_PurchaseReturnMaster> tbl_PurchaseReturnMaster { get; set; }
        public virtual DbSet<tbl_SaleDetail> tbl_SaleDetail { get; set; }
        public virtual DbSet<tbl_SaleMaster> tbl_SaleMaster { get; set; }
        public virtual DbSet<tbl_SaleReturnDetail> tbl_SaleReturnDetail { get; set; }
        public virtual DbSet<tbl_SaleReturnMaster> tbl_SaleReturnMaster { get; set; }
        public virtual DbSet<tblActivityLog> tblActivityLogs { get; set; }
        public virtual DbSet<tblBranch> tblBranches { get; set; }
        public virtual DbSet<tblCategory> tblCategories { get; set; }
        public virtual DbSet<tblCOA> tblCOAs { get; set; }
        public virtual DbSet<tblCOAOpeningBalance> tblCOAOpeningBalances { get; set; }
        public virtual DbSet<tblCompany> tblCompanies { get; set; }
        public virtual DbSet<tblDocumentType> tblDocumentTypes { get; set; }
        public virtual DbSet<tblOPD> tblOPDs { get; set; }
        public virtual DbSet<tblParentAccount> tblParentAccounts { get; set; }
        public virtual DbSet<tblSubAccount> tblSubAccounts { get; set; }
        public virtual DbSet<tblSupplierCustomer> tblSupplierCustomers { get; set; }
        public virtual DbSet<tblSystemConfigration> tblSystemConfigrations { get; set; }
        public virtual DbSet<TblUserRight> TblUserRights { get; set; }
        public virtual DbSet<tblVoucherDetail> tblVoucherDetails { get; set; }
        public virtual DbSet<tblVoucherHead> tblVoucherHeads { get; set; }
    
        public virtual ObjectResult<Nullable<double>> Get_OPD_PendingAmount(Nullable<int> drID)
        {
            var drIDParameter = drID.HasValue ?
                new ObjectParameter("DrID", drID) :
                new ObjectParameter("DrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("Get_OPD_PendingAmount", drIDParameter);
        }
    
        public virtual ObjectResult<GetExpiryWiseProductForSale_Result> GetExpiryWiseProductForSale(Nullable<int> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpiryWiseProductForSale_Result>("GetExpiryWiseProductForSale", itemIdParameter);
        }
    
        public virtual ObjectResult<GetPendingDetail_OPD_DoctorWise_Result> GetPendingDetail_OPD_DoctorWise(Nullable<System.DateTime> datetoday, Nullable<int> drID)
        {
            var datetodayParameter = datetoday.HasValue ?
                new ObjectParameter("datetoday", datetoday) :
                new ObjectParameter("datetoday", typeof(System.DateTime));
    
            var drIDParameter = drID.HasValue ?
                new ObjectParameter("drID", drID) :
                new ObjectParameter("drID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPendingDetail_OPD_DoctorWise_Result>("GetPendingDetail_OPD_DoctorWise", datetodayParameter, drIDParameter);
        }
    
        public virtual ObjectResult<GetReminingAmounts_Result> GetReminingAmounts(Nullable<int> cOA_Id)
        {
            var cOA_IdParameter = cOA_Id.HasValue ?
                new ObjectParameter("COA_Id", cOA_Id) :
                new ObjectParameter("COA_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReminingAmounts_Result>("GetReminingAmounts", cOA_IdParameter);
        }
    
        public virtual ObjectResult<GetReminingAmountsForDoctor_Result> GetReminingAmountsForDoctor(Nullable<int> cOA_Id)
        {
            var cOA_IdParameter = cOA_Id.HasValue ?
                new ObjectParameter("COA_Id", cOA_Id) :
                new ObjectParameter("COA_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReminingAmountsForDoctor_Result>("GetReminingAmountsForDoctor", cOA_IdParameter);
        }
    
        public virtual ObjectResult<ItemWiseRevenue_Result> ItemWiseRevenue(Nullable<int> itemId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemWiseRevenue_Result>("ItemWiseRevenue", itemIdParameter);
        }
    
        public virtual ObjectResult<Proc_GetUserRights_UserId_Result> Proc_GetUserRights_UserId(Nullable<int> userId, string screenName, string role)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var screenNameParameter = screenName != null ?
                new ObjectParameter("ScreenName", screenName) :
                new ObjectParameter("ScreenName", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetUserRights_UserId_Result>("Proc_GetUserRights_UserId", userIdParameter, screenNameParameter, roleParameter);
        }
    
        public virtual int Proc_Payables_Rpt(Nullable<int> organizationId, Nullable<int> companyId, Nullable<int> financialYearId, Nullable<System.DateTime> voucherDateF, Nullable<System.DateTime> voucherDateT)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var financialYearIdParameter = financialYearId.HasValue ?
                new ObjectParameter("FinancialYearId", financialYearId) :
                new ObjectParameter("FinancialYearId", typeof(int));
    
            var voucherDateFParameter = voucherDateF.HasValue ?
                new ObjectParameter("VoucherDateF", voucherDateF) :
                new ObjectParameter("VoucherDateF", typeof(System.DateTime));
    
            var voucherDateTParameter = voucherDateT.HasValue ?
                new ObjectParameter("VoucherDateT", voucherDateT) :
                new ObjectParameter("VoucherDateT", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Payables_Rpt", organizationIdParameter, companyIdParameter, financialYearIdParameter, voucherDateFParameter, voucherDateTParameter);
        }
    
        public virtual int Proc_tblUserRights_Insert(Nullable<int> userId, Nullable<int> screenId, Nullable<int> rightId, Nullable<bool> value)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var screenIdParameter = screenId.HasValue ?
                new ObjectParameter("ScreenId", screenId) :
                new ObjectParameter("ScreenId", typeof(int));
    
            var rightIdParameter = rightId.HasValue ?
                new ObjectParameter("RightId", rightId) :
                new ObjectParameter("RightId", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_tblUserRights_Insert", userIdParameter, screenIdParameter, rightIdParameter, valueParameter);
        }
    
        public virtual ObjectResult<Proc_tblUserRights_UserId_Result> Proc_tblUserRights_UserId(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_tblUserRights_UserId_Result>("Proc_tblUserRights_UserId", userIdParameter);
        }
    
        public virtual ObjectResult<Proc_UserLogin_Result> Proc_UserLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_UserLogin_Result>("Proc_UserLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Proc_UserRights_DeleteByUserID(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Proc_UserRights_DeleteByUserID", userIdParameter);
        }
    
        public virtual ObjectResult<GetPendingDetail_OPD_DateWise_Result> GetPendingDetail_OPD_DateWise(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> drID)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var drIDParameter = drID.HasValue ?
                new ObjectParameter("drID", drID) :
                new ObjectParameter("drID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPendingDetail_OPD_DateWise_Result>("GetPendingDetail_OPD_DateWise", datefromParameter, datetoParameter, drIDParameter);
        }
    }
}
